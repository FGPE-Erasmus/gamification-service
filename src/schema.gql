# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  name: String!
  username: String!
  email: Email!
  roles: [Role!]!
  telephone: String
  birthDate: Date
  createdAt: Date!
  updatedAt: Date!
}

"""Email custom scalar type"""
scalar Email

enum Role {
  USER
  ADMIN
}

"""Date custom scalar type"""
scalar Date

type ListUsers {
  items: [User!]!
  total: Int!
}

type ChallengeStatus {
  studentId: String!
  challengeId: String!
  startedAt: Date
  endedAt: Date
  state: [State!]!
  openedAt: Date
}

enum State {
  LOCKED
  HIDDEN
  OPENED
  FAILED
  COMPLETED
  REJECTED
}

type Submission {
  id: ID!
  exerciseId: String!
  playerId: String!
  metrics: JSON
  result: Result
  grade: Float
  feedback: String
  submittedAt: Date!
  evaluatedAt: Date
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

enum Result {
  ACCEPTED
  REJECTED
}

type Query {
  user(id: String!): User!
  users(skip: Int = 0, take: Int = 50, ids: [ID!], name: String, order: String = "DESC", fieldSort: String = "updatedAt"): ListUsers!
  queryCheck: String!
  get(challengeId: String!, studentId: String!): ChallengeStatus!
  submission(submissionId: String!): Submission!
  submissions(exerciseId: String!): [Submission!]!
}

type Mutation {
  saveUser(id: ID, userInput: CreateUserInput!): User!
  deleteUser(id: ID!): Boolean!
  login(login: String!, password: String!): User!
  signup(name: String!, username: String!, email: Email!, password: String!): User!
  mutationCheck: String!
  createGame(name: String!, startDate: Date!, endDate: Date!, userIds: String!, file: Upload!): String!
  createSubmission(id: String!, exerciseId: String!, playerId: String!, codeFile: String!): Submission!
}

input CreateUserInput {
  name: String!
  username: String!
  email: Email!
  telephone: String
  birthDate: Date
  roles: [Role!] = [USER]
  password: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload
