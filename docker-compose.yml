version: "3.7"

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    user: node
    working_dir: /home/node/app
    volumes:
      - ./src:/home/node/app/src
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
      - mooshak-mock
    networks:
      - fgpe-gs-nw
    command: "npm run start:dev"

  mongodb:
    container_name: ${DB_HOST}
    image: mongo:latest
    environment:
      - MONGO_INITDB_DATABASE=${DB_NAME}
      - MONGO_INITDB_ROOT_USERNAME=${DB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      #- ./docker/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
      - fgpe-gs-db:/data/db
    networks:
      - fgpe-gs-nw

  redis:
    container_name: ${REDIS_HOST}
    image: redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=${ALLOW_EMPTY_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - fgpe-gs-redis:/data/redis
    networks:
      - fgpe-gs-nw

  mooshak-mock:
    container_name: ${EE_HOST}
    image: jcpaiva/mooshak-fgpe
    ports:
      - 8180:80
    volumes:
      - fgpe-gs-mooshak-mock:/home/mooshak/data
    networks:
      - fgpe-gs-nw

  keycloak:
    container_name: keycloak
    image: fgpe/keycloak:latest
    restart: unless-stopped
    volumes:
      - ./docker/keycloak/fgpe-realm.json:/tmp/fgpe-realm.json
      - ./docker/keycloak/profile.properties:/opt/jboss/keycloak/standalone/configuration/profile.properties
    ports:
      - 8080:8080
    environment:
      - DB_VENDOR=POSTGRES
      - DB_ADDR=keycloak-postgres
      - DB_PORT=5432
      - DB_SCHEMA=public
      - DB_DATABASE=keycloakdb
      - DB_USER=admin
      - DB_PASSWORD=password
      - KEYCLOAK_IMPORT=/tmp/fgpe-realm.json
      - KEYCLOAK_USER=${AUTH_KEYCLOAK_ADMIN_USERNAME}
      - KEYCLOAK_PASSWORD=${AUTH_KEYCLOAK_ADMIN_PASSWORD}
      - KEYCLOAK_MIGRATION_STRATEGY=OVERWRITE_EXISTING
    networks:
      - fgpe-gs-nw

  keycloak-postgres:
    image: postgres:11-alpine
    restart: unless-stopped
    volumes:
      # - ./docker/keycloak/postgres:/var/lib/postgresql ##workaround for windows
       - ./docker/keycloak/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=keycloakdb
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - fgpe-gs-nw

  mailhog:
    image: mailhog/mailhog:latest
    restart: always
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - fgpe-gs-nw

  moodle:
    image: fgpe/moodle
    restart: unless-stopped
    environment:
      SITE_URL: ${MOODLE_URL}
      MOODLE_SITE_NAME: ${MOODLE_SITE_NAME}
      MOODLE_EMAIL: ${MOODLE_EMAIL}
      MOODLE_USERNAME: ${MOODLE_USERNAME}
      MOODLE_PASSWORD: ${MOODLE_PASSWORD}
      DB_TYPE: pgsql
      DB_HOST: moodle-db
      DB_PORT: 5432
      DB_NAME: ${MOODLE_DB_NAME}
      DB_USER: ${MOODLE_DB_USER}
      DB_PASS: ${MOODLE_DB_PASSWORD}
      ALLOW_EMPTY_PASSWORD: "no"
      SSLPROXY: ${MOODLE_SSLPROXY}
    ports:
      - '80:8080'
      - '8444:8443'
    volumes:
      - fgpe-moodle-data:/var/www/moodledata
    depends_on:
      - moodle-db
    networks:
      - fgpe-gs-nw

  moodle-db:
    image: postgres:alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${MOODLE_DB_NAME}
      POSTGRES_USER: ${MOODLE_DB_USER}
      POSTGRES_PASSWORD: ${MOODLE_DB_PASSWORD}
    volumes:
      - fgpe-moodle-db-data:/var/lib/postgresql/data
    networks:
      - fgpe-gs-nw

  lti-db:
    image: mongo:latest
    environment:
      - MONGO_INITDB_DATABASE=${LTI_DB_NAME}
      - MONGO_INITDB_ROOT_USERNAME=${LTI_DB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${LTI_DB_PASSWORD}
    volumes:
      - fgpe-lti-db:/data/db
    networks:
      - fgpe-gs-nw

volumes:
  fgpe-gs-db: {}
  fgpe-gs-redis: {}
  fgpe-gs-mooshak-mock: {}
  fgpe-moodle-data: {}
  fgpe-moodle-db-data: {}
  fgpe-lti-db: {}

networks:
  fgpe-gs-nw:

